name: Deploy to TestFlight and Android App Store

on:
  # (TODO) Uncomment the below section to trigger this workflow on creation of a
  #        new release.
  #
  # release:
  #   types:
  #     - created
  workflow_dispatch:
    inputs:
      environment:
        description: The environment to deploy to (`staging` or `production`)
        type: choice
        required: true
        options:
          - staging
          - production
        default: staging

env:
  FLUTTER_VERSION: 3.x
  JAVA_VERSION: 21
  RUBY_VERSION: 3.3

jobs:
  android:
    name: Build and Deploy (Android)
    runs-on: ubuntu-latest

    # Target the environment specified in the workflow_dispatch input. If this
    # was triggered by a release event, default to the `production` environment.
    environment: ${{ github.event.inputs.environment || 'production' }}

    env:
      ANDROID_PACKAGE_NAME: com.ncalteen.flutter_multiplaform
      ANDROID_SDK_VERSION: 34.0.0
      ANDROID_SERVICE_ACCOUNT_JSON: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
      SUPPLY_PACKAGE_NAME: com.ncalteen.flutter_multiplaform

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v4
        with:
          cache: gradle
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ${{ env.RUBY_VERSION}}

      - name: Setup Flutter
        id: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          channel: stable

      - name: Install dependencies
        id: install-dependencies
        run: flutter pub get

      - name: Build Release
        id: build-release
        run: |
          flutter build appbundle --release

      # Bundle will be signed using the secrets specified in the repository
      # environment secrets.
      # prettier-ignore
      - name: Sign Bundle
        id: sign-bundle
        uses: r0adkll/sign-android-release@v1
        env:
          BUILD_TOOLS_VERSION: ${{ env.ANDROID_SDK_VERSION }}
        with:
          alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          releaseDirectory: ${{ github.workspace }}/build/app/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}

      # (Optional) Upload the bundle as a GitHub Actions artifact.
      - name: Upload Bundle
        id: upload-bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-bundle
          path: ${{ steps.sign-bundle.outputs.signedReleaseFile }}

      # prettier-ignore
      - name: Upload with Fastlane
        id: upload-fastlane
        working-directory: ${{ github.workspace }}/android
        run: |
          bundle exec fastlane ${{ github.event.inputs.environment == 'staging' && 'internal' || 'production' }}

      # prettier-ignore
      # - name: Upload to Play Store
      #   uses: r0adkll/upload-google-play@v1.0.18
      #   with:
      #     mappingFile: ${{ github.workspace }}/build/app/outputs/mapping/release/mapping.txt
      #     packageName: ${{ env.ANDROID_PACKAGE_NAME }}
      #     releaseFiles: ${{ steps.sign-bundle.outputs.signedReleaseFile }}
      #     serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
      #     track: ${{ github.event.inputs.environment == 'staging' && 'internal' || 'release' }}

  ios:
    name: Build and Deploy (iOS)
    runs-on: macos-latest

    defaults:
      run:
        working-directory: ${{ github.workspace }}/ios

    # Target the environment specified in the workflow_dispatch input. If this
    # was triggered by a push event, default to the `staging` environment.
    environment: ${{ github.event.inputs.environment || 'staging' }}

    # prettier-ignore
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_USERNAME: ${{ secrets.APPLE_USERNAME }}
      APP_BUNDLE_IDENTIFIER: com.ncalteen.flutterMultiplaform
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_FILE: ${{ secrets.APP_STORE_CONNECT_KEY_FILE }}
      FASTLANE_MATCH_AWS_ACCESS_KEY_ID: ${{ secrets.FASTLANE_MATCH_AWS_ACCESS_KEY_ID }}
      FASTLANE_MATCH_AWS_SECRET_ACCESS_KEY: ${{ secrets.FASTLANE_MATCH_AWS_SECRET_ACCESS_KEY }}
      FASTLANE_MATCH_BUCKET_NAME: ${{ secrets.FASTLANE_MATCH_BUCKET_NAME }}
      FASTLANE_MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
      TEAM_ID: ${{ secrets.TEAM_ID }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v4
        with:
          cache: gradle
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        id: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          channel: stable

      - name: Setup Apple Certificates
        id: setup-certificates
        run: |
          fastlane setup_certificates

      - name: Run Tests
        id: test
        run: |
          fastlane test

      - name: Build and Upload to TestFlight
        id: build-upload
        run: |
          fastlane ${{ github.event.inputs.environment == 'staging' && 'internal' || 'production' }}
