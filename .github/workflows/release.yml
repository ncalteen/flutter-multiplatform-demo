name: Deploy to TestFlight and Android App Store

on:
  # TODO: Uncomment the following lines to enable automatic deployment upon any
  #       push to the `main` branch.
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      environment:
        description: The environment to deploy to (`staging` or `production`)
        type: choice
        required: true
        options:
          - staging
          - production
        default: staging

env:
  ANDROID_SDK_MAJOR: 34
  ANDROID_SDK_VERSION: 34.0.0
  FLUTTER_VERSION: 3.x
  JAVA_VERSION: 21
  ANDROID_PACKAGE_NAME: com.testgroup.flutter_github_actions_android

jobs:
  android:
    name: Build and Deploy Android
    runs-on: ubuntu-latest

    # Target the environment specified in the workflow_dispatch input. If this
    # was triggered by a push event, default to the `staging` environment.
    environment: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v2
        with:
          cache: gradle
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      # - name: Setup Android
      #   id: setup-android
      #   uses: android-actions/setup-android@v3
      #   with:
      #     # (Optional) Set to true to log the accepted licenses, otherwise they
      #     # will be silently accepted.
      #     log-accepted-android-sdk-licenses: false

      # - name: Setup Android Build Tools
      #   id: setup-build-tools
      #   run: |
      #     sdkmanager --install "build-tools;${{ env.ANDROID_SDK_VERSION }}"
      #     sdkmanager "platforms;android-${{ env.ANDROID_SDK_MAJOR }}"

      - name: Setup Flutter
        id: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          channel: stable

      - name: Install dependencies
        id: install-dependencies
        run: flutter pub get

      # - name: Install Fastlane
      #   run: |
      #     sudo gem install fastlane -NV

      # TODO: Remove the `--no-tree-shake-icons` flag. This is a temporary
      #       workaround to avoid a known issue with tree shaking icons.
      - if: ${{ github.event.inputs.environment == 'staging' }}
        name: Build Android (Debug)
        id: build-debug
        run: |
          flutter build apk --debug --no-tree-shake-icons

      # TODO: Remove the `--no-tree-shake-icons` flag. This is a temporary
      #       workaround to avoid a known issue with tree shaking icons.
      - if: ${{ github.event.inputs.environment == 'production' }}
        name: Build Android (Release)
        id: build-release
        run: |
          flutter build apk --release --no-tree-shake-icons

      # APK will be signed using the secrets specified in the repository
      # environment secrets.
      # prettier-ignore
      - name: Sign APK
        id: sign-apk
        uses: r0adkll/sign-android-release@v1
        env:
          BUILD_TOOLS_VERSION: ${{ env.ANDROID_SDK_VERSION }}
        with:
          alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          releaseDirectory: ${{ github.workspace }}/build/app/outputs/flutter-apk/
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}

      # (Optional) Upload the signed APK as a GitHub Actions artifact.
      - name: Upload Signed App Bundle
        id: upload-apk
        uses: actions/upload-artifact@v4
        with:
          name: signed-app-bundle
          path: ${{steps.sign-apk.outputs.signedReleaseFile}}

      # prettier-ignore
      # - name: Upload to Play Store (Internal Testing)
      #   uses: r0adkll/upload-google-play@v1.0.18
      # env:
      # BUILD_TOOLS_VERSION: ${{ env.ANDROID_SDK_VERSION }}
      #   with:
      #     mappingFile: ${{ github.workspace }}/build/app/outputs/mapping/release/mapping.txt
      #     packageName: ${{ env.ANDROID_PACKAGE_NAME }}
      #     releaseFiles: ${{ steps.sign-apk.outputs.signedReleaseFile }}
      #     serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
      #     track: internal

  # ios:
  #   name: Build and Deploy iOS
  #   runs-on: macos-latest

  #   steps:
  #     - name: Checkout
  #       id: checkout
  #       uses: actions/checkout@v4

  #     - name: Setup Flutter
  #       id: setup-flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: 3.19.12
  #         channel: stable

  #     - name: Install Fastlane
  #       run: |
  #         sudo gem install fastlane -NV

  #     - name: Build iOS
  #       run: |
  #         flutter build ios --release --no-codesign

  #     - name: Deploy to TestFlight
  #       run: |
  #         fastlane ios deploy_testflight
